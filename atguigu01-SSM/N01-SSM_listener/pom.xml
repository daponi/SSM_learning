<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>atguigu01-SSM</artifactId>
        <groupId>org.example</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>N01-SSM_listener</artifactId>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <!--
    用listener来整合spring和springMVC容器的理由：

    WEB服务器的三大组件中监听器Listener、过滤器Filter、程序Servlet中，listener首先最早被执行，然后是Filter，最后时Servlet。而SpringMVC的容器(随dispatcherServlet的初始化而创建)管理Controller层，
    且controller里有要依赖注入spring管理的service，所以spring的容器应先于SpringMVC容器创建，因此可以使用listener来创建spring的容器，因为Listener的监听方法是服务器启动后第一时间执行的，比DispatcherServlet和其它要早。

    Spring提供了监听器ContextLoaderListener，实现ServletContextListener接口，可监听 ServletContext的状态，所以在web服务器的启动后，使用监听器Listener来读取Spring的配置文件，
    创建Spring的IOC容器是最快的。web应用中必须在web.xml中配置

    -->



    <!--web工程，打包方式设置为war-->
    <packaging>war</packaging>

    <dependencies>
        <!-- SpringMVC -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>5.3.1</version>
        </dependency>

        <!-- 日志 -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.3</version>
        </dependency>

        <!-- ServletAPI -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- Spring5和Thymeleaf整合包 -->
        <dependency>
            <groupId>org.thymeleaf</groupId>
            <artifactId>thymeleaf-spring5</artifactId>
            <version>3.0.12.RELEASE</version>
        </dependency>
    </dependencies>

</project>