<?xml version="1.0" encoding="UTF-8" ?>
<!--
配置logback.xml文件来实现日志文件输出，springboot配置的是logback-spring.xml
根节点< configuration>,
scan : 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
scanPeriod : 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
debug : 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
-->
<configuration scan="true" scanPeriod="60000" debug="false">
    <!-- 控制台输出日志 ，ppender用来格式化日志输出节点，有两个属性name和class，class用来指定哪种输出策略，常用就是控制台输出策略和文件输出策略-->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!--<pattern> %d{yyyy-MM-dd HH:mm:ss.SSS} [%level] [%thread] [%c] %L - %msg%n</pattern>-->
            <!--<pattern>%date{HH:mm:ss.SSS} %c [%t] - %m%n</pattern>-->
            <pattern>%date{HH:mm:ss.SSS} [%t] - %m%n</pattern>
        </encoder>
    </appender>

    <!--每天生成一个日志文件，保存30天的日志文件。-->
    <appender name="DayFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>logs/log.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logs/log.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%level] [%thread] [%c] %L - %msg%n</pattern>
        </encoder>
    </appender>

    <!--指定logger name为包名或类全名 指定级别 additivity设置是否传递到root logger -->
    <logger name="slf4j" level="INFO" additivity="false">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="DayFile"/>
    </logger>

    <!--打印mybatis的sql语句-->
    <logger name="org.apache.ibatis">
        <level value="info" />
    </logger>
    <logger name="java.sql">
        <level value="debug" />
    </logger>

    <!--slf4j2包下的类在ERROR级别时候传递到root logger中-->
    <logger name="slf4j2" level="ERROR"/>

    <!--根logger控制-->
    <root level="ALL">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="DayFile"/>
    </root>
</configuration>